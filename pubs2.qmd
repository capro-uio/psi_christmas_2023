---
title: "pubs2"
format: html
server: shiny
---

```{r}
#| include: false
library(tidyverse)
library(shiny)

# Get all PSI CRISTIN employees
resp <- httr2::request("https://api.cristin.no/") |>
  httr2::req_url_path_append("v2/persons") |> 
  httr2::req_url_query(parent_unit_id="185.17.5.0",
                       per_page=1000) |> 
  httr2::req_perform()

persons <- httr2::resp_body_json(resp) |> 
  lapply(as_tibble) |> 
  bind_rows() |> 
  arrange(first_name, surname) |> 
  mutate(
    name = paste(first_name, surname),
    n = row_number()
  ) |> 
  select(-url)

# img <- rvest::html_elements(res, ".gs_rimg") |> 
#    rvest::html_elements("img") |> 
#   rvest::html_attr("src")



```


```{r}
selectInput("author_name", 
            "Select author", 
            setNames(
              persons$cristin_person_id,
              persons$name
            ))

uiOutput("gid_result")
```



```{r}
#| context: server
library(tidyverse)

# Get all PSI CRISTIN employees
resp <- httr2::request("https://api.cristin.no/") |>
  httr2::req_url_path_append("v2/persons") |> 
  httr2::req_url_query(parent_unit_id="185.17.5.0",
                       per_page=1000) |> 
  httr2::req_perform()

persons <- httr2::resp_body_json(resp) |> 
  lapply(as_tibble) |> 
  bind_rows() |> 
  mutate(
    name = paste(first_name, surname)
  ) |> 
  arrange(name)

search_gid <- function(name){
  resp <- httr2::request("https://scholar.google.com/") |>
    httr2::req_url_path_append("/citations") |> 
    httr2::req_url_query(
      view_op="search_authors",
      mauthors=str_replace_all(name, " ", "+"),
      hl="en") |> 
    httr2::req_perform()
  
  res <- httr2::resp_body_html(resp)
  
  tibble(
    name = rvest::html_elements(res, ".gs_ai_name") |> 
      rvest::html_text(),
    cit = rvest::html_elements(res, ".gs_ai_cby") |> 
      rvest::html_text(),
    affiliation = rvest::html_elements(res, ".gs_ai_aff") |> 
      rvest::html_text(),
    id = rvest::html_elements(res, ".gs_ai_pho") |> 
      rvest::html_attr("href") |> 
      stringr::str_split_i("=", i = -1),
  )
}

search_gid_cached <- memoise::memoise(
  search_gid
)

observeEvent(input$author_name, {
  author <- persons |> 
    filter(cristin_person_id == input$author_name)
  ginfo <- search_gid_cached(author$name)
  
  if(nrow(ginfo) == 0){
    si_name <- paste0(str_split_i(author$name, " ", 1), 
                      str_split_i(author$name, " ", -1))
    ginfo <- search_gid_cached(si_name)
  }
  
  txt <- paste("No google scholar matches for", author$name)
  if(nrow(ginfo) > 0){
    txt <- paste("Found a match for", author$name)
    if(nrow(ginfo) > 1){
      ginfo <- ginfo |> 
        filter(grepl("Oslo", affiliation))
      if(nrow(ginfo) > 1){
        txt <- paste("Found multiple matches for", author$name)
      }
    }
  }
  
  output$result_multiple <- renderTable(ginfo)
  output$result_text <- renderText(txt)
  
  get_author <- function(gid, page_size = 1000){
    resp <- httr2::request("https://scholar.google.com/") |>
      httr2::req_url_path_append("/citations") |> 
      httr2::req_url_query(
        user=gid,
        hl="en",
        pagesize=page_size) |> 
      httr2::req_perform()
    
    res <- httr2::resp_body_html(resp)
    
    art <- rvest::html_element(res, "#gsc_a_b") |> 
      rvest::html_elements(".gsc_a_t")
    inf <- lapply(art, function(x){
      el <- rvest::html_elements(x, ".gs_gray")
      tibble(
        authors = rvest::html_text(el[1]),
        journal = rvest::html_text(el[2])
      )
    }) |> 
      bind_rows()
    
    pubs <- tibble(
      year = rvest::html_elements(res, ".gsc_a_h.gsc_a_hc.gs_ibl") |> 
        rvest::html_text() |> 
        as.integer(),
      citations = rvest::html_elements(res, ".gsc_a_ac.gs_ibl") |> 
        rvest::html_text() |> 
        as.integer(),
      title = rvest::html_elements(res, ".gsc_a_at") |> 
        rvest::html_text()
    ) |> 
      bind_cols(inf) |> 
      mutate(
        url = paste0("https://scholar.google.com",
                     art |> 
                       rvest::html_elements(".gsc_a_at") |> 
                       rvest::html_attr("href")),
        pubid = str_split_i(url, ":", -1)
      )
    
    pubs$authors |> 
      str_split(",") |> 
      unlist() |> 
      str_trim() |> 
      unique()
    
    cstats <- rvest::html_element(res, "#gsc_rsb_st") |> 
      rvest::html_element("tbody")
    nms <- rvest::html_elements(res, ".gsc_rsb_sth") |> 
      rvest::html_text()
    nms <- nms[nms != ""]
    cit_stats <- rvest::html_elements(cstats, ".gsc_rsb_std") |> 
      rvest::html_text() |> 
      matrix(ncol = 2, nrow = 3, byrow = TRUE,
             dimnames = list(rvest::html_elements(cstats, ".gsc_rsb_sc1") |> 
                               rvest::html_text(),
                             nms
             )) |> 
      as_tibble()
    
    if(nrow(ginfo) > 0){
      gid <- ginfo$id[1]
      output$plot_coauth <- scholar::get_coauthors(gid, 5) |> 
        scholar::plot_coauthors() |> 
        renderPlot()
    }
    
    print(ginfo)
    output$gid_result <- renderUI({
      textOutput("result_text")    
      tableOutput("result_multiple")
      plotOutput("plot_coauth")
    })
  })

```
